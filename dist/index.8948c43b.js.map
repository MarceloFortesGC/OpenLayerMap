{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/string.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Map.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","import \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport Overlay from \"ol/Overlay\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport View from \"ol/View\";\r\nimport XYZ from \"ol/source/XYZ\";\r\nimport { toLonLat } from \"ol/proj\";\r\nimport { toStringHDMS } from \"ol/coordinate\";\r\n\r\nconst container = document.getElementById(\"popup\");\r\nconst content = document.getElementById(\"popup-content\");\r\nconst closer = document.getElementById(\"popup-closer\");\r\n\r\nconst overlay = new Overlay({\r\n  element: container\r\n});\r\n\r\ncloser.onclick = function () {\r\n  overlay.setPosition(undefined);\r\n  closer.blur();\r\n  return false;\r\n};\r\n\r\nconst key = \"jVSkcydrsJ2jf5844AOu\";\r\nconst attributions =\r\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        attributions: attributions,\r\n        url: \"https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=\" + key,\r\n        tileSize: 512\r\n      })\r\n    })\r\n  ],\r\n  overlays: [overlay],\r\n  target: \"map\",\r\n  view: new View({\r\n    center: ol.proj.fromLonLat([0,0]),\r\n    zoom: 3\r\n  })\r\n});\r\n\r\nmap.on(\"singleclick\", function (evt) {\r\n  const coordinate = evt.coordinate;\r\n  const coord = toStringHDMS(toLonLat(coordinate));\r\n\r\n  content.innerHTML = `<p>Você clicou em:</p>\r\n  <code>${coord}</code></br></br>\r\n  <button onclick=\"insert('${coord}')\">Salvar</button>`;\r\n  overlay.setPosition(coordinate);\r\n});\r\n"],"names":["$3273ed08087da3da$export$2e2bcd8739ae039","Disposable1","this","disposed","prototype","dispose","disposeInternal","$b998d41b678ed5d1$export$4e734a3b32fb971b","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","indexOf","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$40658b5e833b516b$export$2e2bcd8739ae039","_super","AssertionError1","code","_this","message","split","call","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","default","$e22e7611e69f42a9$var$transformStringDiv","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$2f35615121725455$export$2e2bcd8739ae039","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$dab4245bc22b806c$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","ii","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","opt_extent","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","end","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","start","intersects1","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","value","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$8240f01c446270e6","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","m","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$a3fe094919f356fd","floor","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","g","undefined","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","hasOwnProperty","key","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","slice","map","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$f351daabfe6e2d22$var$getKey","set","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent1","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","PROPERTYCHANGE","$beaefe87199bb537$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","Target1","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable1","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","ObjectEvent1","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject1","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$f6d1853b3fcae320$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer1","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b68b3d6e32e3074a$exports","$f5e92a4d985a2824$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$98f5bfe3c4864f05$export$2e2bcd8739ae039","UNDEFINED","LOADING","READY","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer1","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$ff7180bdd45ebb19$export$24be126cb0a7bbeb","number","opt_precision","numberString","toFixed","decimal","$1bd0a226f9a16141$export$6eb0ac5f024d8590","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","equals1","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$c883fd238161f841","$1bd0a226f9a16141$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer1","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","forEach","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent1","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$e823f88e4111159a","element","offsetWidth","marginLeft","marginRight","$075f937d7366f1a2$export$fc5b8aac72846d1e","offsetHeight","marginTop","marginBottom","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$d4aabc5c971073f1$var$measureText","measureText","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer1","fontChangeListenerKey_","redrawText","element_","position","container","getViewport","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","display","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","ADD","REMOVE","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","CollectionEvent1","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection1","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","GroupEvent1","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup1","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent1","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent1","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler1","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$07fa325567004bb7$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","IDLE","LOADED","EMPTY","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue1","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$419865bd7211e6e7$export$2e2bcd8739ae039","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection1","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection1","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection1","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$f5ec5c943d804ecb$export$e16d8520af44a096","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$11b5dd198626e1de$export$3988ae62b71be9a3","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$3fb495868742d370","opt_projection","lonLat","$9c4744460e43e41b$export$51186ad6e864892a","lon","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$d65a517690fc4385","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$bac43a1f4a628548$export$22ac0f6b219de91a","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$1c4e6da9b4b066fe","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$42282ac5c8474df1$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry1","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry1","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing1","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$export$2e2bcd8739ae039","Point1","$6eced4c969949f6b$var$__extends","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon1","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap1","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control1","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution1","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate1","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$b4471d80e1d69273$export$ebe90cb607ad99e","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","ACTIVE","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction1","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom1","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction1","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$export$2e2bcd8739ae039","DragPan1","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","scale1","centroid","$cf1eb502962d87a8$exports","update","begin","getDistance","getAngle","centerpx","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate1","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox1","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","DragBoxEvent1","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox1","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom1","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","UP","DOWN","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan1","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom1","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom1","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate1","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom1","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$fdc8b40501c0cf45$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map1","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$53538eb1d663b5af$export$2e2bcd8739ae039","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","$c80d3ed2a84f41ed$var$Property","$c80d3ed2a84f41ed$export$2e2bcd8739ae039","Overlay1","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$c80d3ed2a84f41ed$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$e4c61536de922b84$export$2e2bcd8739ae039","PRELOAD","USE_INTERIM_TILES_ON_ERROR","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer1","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer1","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer1","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","getImageData","col","row","clearRect","drawImage","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext1","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile1","interimTile","transition_","transition","transitionStarts_","interpolate","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase1","$5edd00bd92be9cf8$var$__extends","getImage","getPixelRatio","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper1","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile1","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation1","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","closePath","restore","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$16d356211d01f1cc","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile1","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$550e524b0d1b61d4$var$TileRange","TileRange1","containsTileRange","equals","getHeight","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer1","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$cd3bc8d185522361$exports","$398e350e33050c07$exports","tileOrigin","getOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$42152f52b26b6ca7$exports","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer1","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache1","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$bf2a04496fadabc6$export$a807b7874eb66454","$bf2a04496fadabc6$export$d6af199866bfb566","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","getFullTileRange","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache1","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$7e3d7a0f8b272861$export$2e2bcd8739ae039","TILELOADSTART","TILELOADEND","TILELOADERROR","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source1","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","refresh","setAttributions","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid1","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","$5779655d81caea04$export$39a9ce3624977b84","$5779655d81caea04$export$38500bbeccc864ff","xyzOptions","gridOptions","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource1","opaque_","opaque","tilePixelRatio_","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","TileSourceEvent1","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$91dd08a0f5859882$export$4229b1d9af69b3be","$91dd08a0f5859882$export$2a1fa079bfd73dde","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile1","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","$51d055913ca55b5e$var$TileImage","TileImage1","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ1","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$efd3ba4ec2608b1d$var$container","$efd3ba4ec2608b1d$var$content","$efd3ba4ec2608b1d$var$closer","$efd3ba4ec2608b1d$var$overlay","$c80d3ed2a84f41ed$exports","onclick","blur","$41aa29ae0c4b607a$exports","$32e67a4d3559554a$exports","$963a7ef65488964c$exports","ol","fromLonLat"],"version":3,"file":"index.8948c43b.js.map"}